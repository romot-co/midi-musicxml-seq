{"version":3,"sources":["pages/MidiUploadPage.js","components/Note.js","components/Sequence.js","pages/MidiEditPage.js","App.js","serviceWorker.js","index.js"],"names":["MidiUploadPage","fileInputRef","useRef","history","useHistory","Helmet","Container","Row","Col","className","Button","type","color","onClick","current","click","ref","id","accept","onChange","e","file","target","files","reader","FileReader","readAsArrayBuffer","onload","push","midiData","result","onerror","window","alert","Note","props","note","xScale","phoneme","lyric","index","edit","setEdit","inputEl","useState","value","setValue","styles","left","ticks","bottom","midi","width","durationTicks","useEffect","select","isEdit","stopPropagation","style","onKeyPress","key","toLowerCase","length","maxLength","UncontrolledTooltip","placement","delay","show","name","SequenceKeys","keys","octave","mapPitch","0","1","2","3","4","5","6","7","8","9","10","11","map","v","i","Fragment","pitch","Sequence","trackIndex","setLyric","pitches","Array","reduce","a","c","slice","oc","n","indexOf","reverse","data","toJSON","notes","tracks","totalDuration","setPhoneme","text","nextLyric","split","join","o","p","x","MidiEditPage","location","useLocation","setMidi","tempo","setTempo","setXScale","state","Midi","header","tempos","document","querySelector","scrollIntoView","Navbar","light","confirm","Input","placeholder","json","declaration","attributes","version","encoding","elements","duration","xml","xmljs","json2xml","blob","Blob","createElement","download","href","URL","createObjectURL","fluid","marginTop","trim","max","min","step","Routes","exact","path","component","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2e6ce5d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { Button, Col, Container, Row } from 'reactstrap';\n\nconst MidiUploadPage = () => {\n  const fileInputRef = useRef(null);\n  const history = useHistory();\n  const handleClickUpload = () => {\n    fileInputRef.current.click();\n  };\n  const handleChangeFile = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onload = (e) => {\n      history.push('/edit', { midiData: e.target.result });\n    };\n    reader.onerror = (e) => {\n      window.alert('ファイル読み込みに失敗しました');\n    };\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>MIDIアップロード</title>\n        <body />\n      </Helmet>\n      <Container>\n        <Row>\n          <Col>\n            <div className=\"vh-100 d-flex align-items-center justify-content-center\">\n              <div className=\"text-center\">\n                <h1 className=\"mb-3\">MMXSEQ</h1>\n                <Button type=\"button\" color=\"primary\" onClick={handleClickUpload}>\n                  MIDIファイルをアップロード\n                </Button>\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  id=\"midi-file-input\"\n                  className=\"d-none\"\n                  accept=\"audio/midi, audio/x-midi\"\n                  onChange={handleChangeFile}\n                />\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default MidiUploadPage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Input, UncontrolledTooltip } from 'reactstrap';\n\nconst Note = props => {\n  const { note, xScale, phoneme, lyric, index, edit, setEdit, onChange } = props;\n  const inputEl = useRef(null);\n  const [value, setValue] = useState('');\n  const styles = {\n    left: `${note.ticks * xScale}px`,\n    bottom: `${(note.midi - 12) * 24}px`,\n    width: `${note.durationTicks * xScale}px`,\n  };\n  const handleClick = (e) => {\n    e.stopPropagation();\n    if (!edit) {\n      setEdit(index);\n      inputEl && inputEl.current.select();\n    }\n  };\n  const handleKeyPress = (e) => {\n    const key = e.key.toLowerCase();\n    if (key === 'enter' || key === 'tab' && lyric.length < index) {\n      setEdit(index + 1);\n    }\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value[0]);\n    if (e.target.value) {\n      onChange(e.target.value[0], index);\n    }\n  };\n\n  useEffect(() => {\n    setValue(phoneme);\n  }, [phoneme]);\n\n  useEffect(() => {\n    if (edit === index) {\n      inputEl.current.select();\n    }\n  }, [edit]);\n\n  const isEdit = edit === index;\n\n  return (\n    <div className=\"note\" onClick={handleClick} style={styles}>\n      <input\n        type=\"text\"\n        value={value || ''}\n        onKeyPress={handleKeyPress}\n        onChange={handleChange}\n        className=\"note-input\"\n        maxLength=\"1\"\n        ref={inputEl}\n        id={`note-${index}`}\n      />\n      {!isEdit &&\n        <UncontrolledTooltip\n          target={`note-${index}`}\n          placement=\"bottom\"\n          delay={{\n            show: 200,\n          }}\n        >{value}{' '}<span className=\"text-muted\">{note.name}</span></UncontrolledTooltip>\n      }\n    </div>\n  );\n};\n\nexport default Note;\n","import React, { useState } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport Note from 'components/Note';\n\nconst SequenceKeys = props => {\n  const { keys, octave } = props;\n  const mapPitch = {\n    0: 'C',\n    1: 'C#',\n    2: 'D',\n    3: 'D#',\n    4: 'E',\n    5: 'F',\n    6: 'F#',\n    7: 'G',\n    8: 'G#',\n    9: 'A',\n    10: 'A#',\n    11: 'B',\n  };\n\n  return (\n    <div className=\"sequence-scale\">\n      { keys.map((v,i) => (\n        <React.Fragment key={i}>\n          <div className={`sequence-key sequence-key-${v.midi} sequence-key-${v.color} sequence-key-${v.pitch}`} id={`sequence-key-${v.midi}`}>\n            <span className=\"sequence-key-base\">{mapPitch[v.pitch]}{octave + 1}</span>\n          </div>\n          {/*\n          <UncontrolledTooltip\n            target={`sequence-key-${v.midi}`} placement=\"right\"\n          >\n            {mapPitch[v.pitch]}{octave}\n          </UncontrolledTooltip>\n          */}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nconst Sequence = props => {\n  const { midi, trackIndex = 0, lyric, setLyric, xScale } = props;\n  const pitches = [...Array(128).keys()]\n    .reduce((a, c, i) => i % 12 === 0 ? [...a, [c]] : [...a.slice(0, -1), [...a[a.length - 1], c]], [])\n    .map((v,oc) => v.map((n,i) => {\n      return {\n        midi: n,\n        pitch: i,\n        octave: 9 - oc,\n        color: [0,2,4,5,7,9,11].indexOf(i) > -1 ? 'white' : 'black',\n      }\n    }).reverse()).reverse();\n  const data = midi && midi.toJSON();\n  const notes = data && data.tracks[trackIndex].notes;\n  const totalDuration = notes ? (notes[notes.length - 1].ticks + notes[notes.length - 1].durationTicks) * xScale : 1000;\n  const setPhoneme = (text, index) => {\n    const nextLyric = lyric.split('').map((v,i) => i === index ? text : v).join('');\n    setLyric(nextLyric);\n  };\n  const [edit, setEdit] = useState(false);\n  return (\n    <div className=\"sequence\">\n      <div className=\"sequence-scales\">\n        {\n          pitches.map((v,i,o) => (\n            <SequenceKeys keys={v} octave={9 - i} key={i} />\n          ))\n        }\n      </div>\n      <div className=\"sequence-body\">\n        <div className=\"sequence-grid\" style={{width: `${totalDuration / xScale}px`}} onClick={() => setEdit(false)}>\n          { pitches.map((v,i,o) => (\n            <div className=\"sequence-grid-octave\" key={i}>\n              { v.map((p,x) => (\n                <div key={x} className={`sequence-grid-pitch sequence-grid-pitch-${p.color}`} />\n              ))}\n            </div>\n          ))}\n        </div>\n        { midi && data.tracks[trackIndex].notes.map((v,i) => (\n          <Note\n            note={v}\n            xScale={xScale}\n            key={i}\n            phoneme={lyric[i]}\n            edit={edit}\n            setEdit={setEdit}\n            index={i}\n            lyric={lyric}\n            onChange={setPhoneme}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Sequence;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { Button, Col, Container, Input, Navbar, Row } from 'reactstrap';\nimport Sequence from 'components/Sequence';\nimport { Midi } from '@tonejs/midi';\nimport { FiX } from \"react-icons/fi\";\nimport xmljs from 'xml-js';\n\nconst MidiEditPage = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const [midi, setMidi] = useState(false);\n  const [tempo, setTempo] = useState(120);\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [xScale, setXScale] = useState(0.25);\n  const [lyric, setLyric] = useState('');\n  useEffect(\n    () => {\n      const midiData = location.state && location.state.midiData;\n      if (midiData) {\n        if (midiData.tracks < 1) {\n          window.alert('トラックがありません');\n          history.push('/');\n        } else {\n          const midi = new Midi(midiData);\n          setMidi(midi);\n          setTempo(midi.header.tempos[0] || 120);\n          setLyric(midi.tracks[0].notes.map(() => { return 'あ' }).join(''));\n        }\n      }\n    },\n    [location.state], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(\n    () => {\n      document.querySelector('#sequence-key-60').scrollIntoView();\n    },\n    [],\n  );\n\n  const handleClose = () => {\n    if (window.confirm('データは保存されません')) {\n      setMidi(false);\n      history.push('/');\n    }\n  };\n  const handleChangeTempo = (e) => {\n    setTempo(e.target.value);\n  };\n  const handleChangeXScale = (e) => {\n    setXScale(e.target.value);\n  };\n  const handleChangeLyricText = (e) => {\n    const nextLyric = e.target.value.split('').map(v => v.trim()).join('');\n    setLyric(nextLyric);\n  };\n  const handleGenerateMusicXML = () => {\n    const notes = midi.tracks[trackIndex].notes.map((v,i) => {\n      return {\n        type: 'element',\n        name: 'note',\n        elements: [\n          {\n            type: 'element',\n            name: 'pitch',\n            elements: [\n              {\n                type: 'element',\n                name: 'step',\n                elements: [\n                  {\n                    type: 'text',\n                    text: v.name.slice(0,-1),\n                  }\n                ]\n              },\n              {\n                type: 'element',\n                name: 'octave',\n                elements: [\n                  {\n                    type: 'text',\n                    text: v.name.slice(-1),\n                  }\n                ]\n              },\n            ]\n          },\n          {\n            type: 'element',\n            name: 'duration',\n            elements: [\n              {\n                type: 'text',\n                text: v.duration,\n              }\n            ]\n          },\n          {\n            type: 'element',\n            name: 'lyric',\n            elements: [\n              {\n                type: 'element',\n                name: 'text',\n                elements: [\n                  {\n                    type: 'text',\n                    text: lyric[i],\n                  }\n                ]\n              }\n            ]\n          },\n        ]\n      };\n    });\n    const json = {\n      declaration: {\n        attributes: {\n          version: '1.0',\n          encoding:'utf-8'\n        }\n      },\n      elements: [\n        {\n          type: 'element',\n          name: 'score-partwise',\n          attributes: {\n            version: '3.1',\n          },\n          elements: [\n            {\n              type: 'element',\n              name: 'part',\n              elements: [\n                {\n                  type: 'element',\n                  name: 'measure',\n                  elements: notes,\n                }\n              ],\n            }\n          ]}\n      ],\n    };\n    const xml = xmljs.json2xml(json);\n    const blob = new Blob([xml], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    const a = document.createElement('a');\n    a.download = 'score.musicxml';\n    a.href = URL.createObjectURL(blob);\n    a.click();\n  };\n  return (\n    <>\n      <Helmet>\n        <title>MIDI編集</title>\n        <body />\n      </Helmet>\n      <Navbar color=\"light\" light className=\"fixed-top\">\n        <div className=\"d-flex align-items-center mr-auto\">\n          <Button className=\"rounded-circle mr-3 btn-icon\" color=\"light\" onClick={handleClose}>\n            <FiX />\n          </Button>\n          <Input\n            type=\"number\"\n            color=\"light\"\n            placeholder=\"テンポ\"\n            value={tempo}\n            onChange={handleChangeTempo}\n            style={{width: '80px'}}\n            className=\"mr-2\"\n          />\n          BPM\n        </div>\n        <Button color=\"primary\" onClick={handleGenerateMusicXML}>\n          MusicXML生成\n        </Button>\n      </Navbar>\n      <Container fluid className=\"px-0\" style={{marginTop: '56px'}}>\n        <Row className=\"no-gutters\">\n          <Col>\n            <Sequence\n              midi={midi}\n              trackIndex={trackIndex}\n              lyric={lyric}\n              xScale={xScale}\n              setLyric={setLyric}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <div className=\"sequence-controls\">\n            <div className=\"d-flex align-items-start p-3\">\n              <Input className=\"lyric-text\" type=\"textarea\" className=\"mr-3\" value={lyric} onChange={handleChangeLyricText} />\n              <Input type=\"range\" className=\"sequence-scale-range\" max=\"0.5\" min=\"0.05\" step=\"0.05\" value={xScale} onChange={handleChangeXScale} />\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default MidiEditPage;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport 'scss/index.scss';\n\nimport MidiUploadPage from 'pages/MidiUploadPage';\nimport MidiEditPage from 'pages/MidiEditPage';\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={MidiUploadPage} />\n        <Route exact path=\"/edit\" component={MidiEditPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <main className=\"main\">\n        <Routes />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}